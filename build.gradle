// 빌드 시
buildscript {
    ext {
        springBootVersion = '2.4.13'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath "org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}"
        classpath "io.spring.gradle:dependency-management-plugin:1.0.4.RELEASE"
    }
}

// 하위 모든 프로젝트 공통 세팅
subprojects {
    apply plugin: 'java'
    apply plugin: 'idea'
    apply plugin: 'org.springframework.boot'
    apply plugin: 'io.spring.dependency-management'

    group 'org.example'
    version '1.0-SNAPSHOT'

    sourceCompatibility = '1.8'
    targetCompatibility = '1.8'
//    compileJava.options.encoding = 'UTF-8'

    repositories {
        mavenCentral()
    }

    // 하위 모듈에서 공통으로 사용하는 세팅 추가
    dependencies {
        compileOnly ('org.projectlombok:lombok')
        annotationProcessor ('org.projectlombok:lombok')
        annotationProcessor ('org.springframework.boot:spring-boot-configuration-processor')

        // junit5
        testImplementation ('org.junit.jupiter:junit-jupiter-api:5.8.1')
        testRuntimeOnly ('org.junit.jupiter:junit-jupiter-engine:5.8.1')

        // test
        testImplementation ('org.springframework.boot:spring-boot-starter-test')

        // h2 내장 db
        runtimeOnly ('com.h2database:h2')
//        implementation ('org.hibernate:hibernate-entitymanager')
//        implementation ('org.javassist:javassist')
        compileOnly ("org.springframework.boot:spring-boot-devtools")

        implementation ('org.springframework.boot:spring-boot-starter-web')

        implementation ('org.springframework.boot:spring-boot-starter-validation')

        // jpa
        implementation ('org.springframework.boot:spring-boot-starter-data-jpa')

        // QueryDSL
        implementation ("com.querydsl:querydsl-core:4.4.0") // querydsl
        implementation ("com.querydsl:querydsl-jpa:4.4.0") // querydsl
        annotationProcessor ("com.querydsl:querydsl-apt:${dependencyManagement.importedProperties['querydsl.version']}:jpa") // querydsl JPAAnnotationProcessor 사용 지정
        annotationProcessor("jakarta.persistence:jakarta.persistence-api")
        annotationProcessor("jakarta.annotation:jakarta.annotation-api")

        // data
        implementation ('org.json:json:20190722')
        implementation ('org.modelmapper:modelmapper:1.1.2')

        // swagger
        implementation ('io.springfox:springfox-swagger2:2.9.2')
        implementation ('io.springfox:springfox-swagger-ui:2.9.2')

    }

    test {
        useJUnitPlatform()
    }

    ////// for QueryDSL Qclass 경로 설정 start ////////
    def generated='src/main/generated/querydsl'
//def querydslDir = "$buildDir/generated/querydsl"
    sourceSets {
        main.java.srcDirs += [ generated ]
    }

    tasks.withType(JavaCompile) {
        options.annotationProcessorGeneratedSourcesDirectory = file(generated)
    }

    clean.doLast {
        file(generated).deleteDir()
    }
    ////// for QueryDSL Qclass 경로 설정 end ////////

}